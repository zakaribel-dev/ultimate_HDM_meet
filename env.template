# Enable self-signed certs (app/ssl)

HTTPS=false # par defaut à false pour environnement Dev, il sera mis à true côté server si dans l'url on detecte qu'on est pas en local

# Domain

HOST=localhost

# Time Zone 

TZ=UTC

# Logs

LOGS_DEBUG=true 
LOGS_COLORS=true 

# Cors
# Origin: Allow specified origin es '["https://example.com", "https://subdomain.example.com", "http://localhost:3000"]' or 
# all origins '*' if not specified as per default.
# Methods: Allow only GET and POST methods

CORS_ORIGIN='*'
CORS_METHODS='["GET", "POST"]'


# Host protection
# HOST_PROTECTED: When set to true, it requires a valid username and password from the HOST_USERS list to initialize or join a room.
# HOST_USER_AUTH: When set to true, it also requires a valid username and password for joining the room.
# HOST_USERS: This is the list of valid host users along with their credentials.

HOST_PROTECTED=true 
HOST_USER_AUTH=true 
HOST_USERS='[{"username": "Zak", "password": "test"},{"username": "test", "password": "1234"}, {"username": "oui", "password": "non"}]'

# JWT token config

JWT_KEY=HDM MEET
JWT_EXP=1h

# Presenters list
# In our virtual room, the first participant to join will assume the role of the presenter. 
# Additionally, we have the option to include more presenters and co-presenters, each identified by their username.


PRESENTERS='["Zak", "test"]'

# listen port

PORT=3000


# Stun
# About: https://bloggeek.me/webrtcglossary/stun/
# Check: https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/

STUN_SERVER_ENABLED=true # true or false
STUN_SERVER_URL=stun:stun.l.google.com:19302

# Turn 
# About: https://bloggeek.me/webrtcglossary/turn/
# Recommended: https://github.com/coturn/coturn
# Installation: https://github.com/miroslavpejic85/mirotalk/blob/master/docs/coturn.md
# Free one: https://www.metered.ca/tools/openrelay/ (Please, create your own account)
# Check: https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/

TURN_SERVER_ENABLED=true # true or false
TURN_SERVER_URL=turn:a.relay.metered.ca:443
TURN_SERVER_USERNAME=e8dd65b92c62d3e36cafb807
TURN_SERVER_CREDENTIAL=uWdWNmkhvyqTEswO


# API
# The response will give you a entrypoint / Room URL for your meeting.
# curl -X POST "http://localhost:3000/api/v1/meeting" -H  "authorization: mirotalkp2p_default_secret" -H  "Content-Type: application/json"

API_KEY_SECRET=HDM MEET





# Slack Integration (optional)
# 1. Goto https://api.slack.com/apps/
# 2. Create your app
# 3. On Settings - Basic Information - App Credentials chose your Signing Secret
# 4. Create a Slash Commands and put as Request URL: https://your.domain.name/slack

SLACK_ENABLED=false # true or false
SLACK_SIGNING_SECRET=YourSlackSigningSecret

